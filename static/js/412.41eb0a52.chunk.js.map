{"version":3,"file":"static/js/412.41eb0a52.chunk.js","mappings":"iPAOaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EAErCC,GAAwBC,EAAAA,EAAAA,IACnC,CAACP,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAG,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cAAc,GAE7D,I,mBCdWE,EAAMC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yIAShBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kHAQpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oM,SCdpBK,EAAS,WACpB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYlB,GACpBmB,GAAWC,EAAAA,EAAAA,MASjB,OACEC,EAAAA,EAAAA,MAACb,EAAG,CAAAc,SAAA,EACFC,EAAAA,EAAAA,KAACX,EAAK,CAAAU,SAAC,2BACPC,EAAAA,EAAAA,KAACT,EAAK,CAACU,KAAK,OAAOP,MAAOA,EAAOQ,SATpB,SAAAC,GACf,IAAMC,EAAkBD,EAAME,OAAOX,MAAMX,cAE3Ca,GAASU,EAAAA,EAAAA,IAAaF,GACxB,MAQF,E,uCCpBaG,EAAOrB,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yFAOlBC,EAAQH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kHAQpBG,EAAQL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oMAWpBoB,EAAStB,EAAAA,GAAAA,OAAauB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,mZChB7BsB,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAETE,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BhC,EAAIkC,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClB7C,GAAWoB,EAAAA,EAAAA,IAAYtB,GACvBuB,GAAWC,EAAAA,EAAAA,MAqBX0B,EAAe,SAAApB,GACnB,IAAAqB,EAAwBrB,EAAMsB,cAAtB3C,EAAI0C,EAAJ1C,KAAMY,EAAK8B,EAAL9B,MACd,OAAQZ,GACN,IAAK,OACHoC,EAAQxB,GACR,MACF,IAAK,SACH4B,EAAU5B,GACV,MACF,QACE,OAEN,EAEA,OACEI,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA3B,SAAA,EACED,EAAAA,EAAAA,MAACS,EAAI,CAACoB,SAnCW,SAAAxB,GACnBA,EAAMyB,iBAEerD,EAASsD,MAC5B,SAAAhD,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,aAAa,IAI5D+C,MAAM,GAADC,OAAIjD,EAAI,mGAKfc,GAASoC,EAAAA,EAAAA,IAAY,CAAElD,KAAAA,EAAMuC,OAAAA,KAE7BH,EAAQ,IACRI,EAAU,IACZ,EAkBiCvB,SAAA,EAC3BD,EAAAA,EAAAA,MAACT,EAAK,CAAC4C,QAASvB,EAAYX,SAAA,CAAC,QAE3BC,EAAAA,EAAAA,KAACT,EAAK,CACJU,KAAK,OACLnB,KAAK,OACLoD,YAAY,eACZxC,MAAOZ,EACPoB,SAAUqB,EACVY,QAAQ,yHACRC,MAAM,8DACNC,UAAQ,QAIZvC,EAAAA,EAAAA,MAACT,EAAK,CAAC4C,QAASrB,EAAcb,SAAA,CAAC,UAE7BC,EAAAA,EAAAA,KAACT,EAAK,CACJU,KAAK,MACLnB,KAAK,SACLoD,YAAY,6HACZxC,MAAO2B,EACPnB,SAAUqB,EACVY,QAAQ,gCACRC,MAAM,+FACNC,UAAQ,QAIZvC,EAAAA,EAAAA,MAACU,EAAM,CAACP,KAAK,SAAQF,SAAA,CAAC,eAEpBC,EAAAA,EAAAA,KAACsC,EAAAA,EAAa,WAGlBtC,EAAAA,EAAAA,KAACP,EAAM,MAGb,E,UC3Fa8C,EAAOrD,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2LAUhBoB,EAAStB,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oYCDtBoD,EAAc,WACzB,IAAMjE,GAAWoB,EAAAA,EAAAA,IAAYhB,GACvBiB,GAAWC,EAAAA,EAAAA,MAEjB,OACEG,EAAAA,EAAAA,KAAA,MAAAD,SACGxB,EAASkE,KAAI,SAAA5D,GAAO,OACnBiB,EAAAA,EAAAA,MAACyC,EAAI,CAAAxC,SAAA,CACFlB,EAAQC,KAAO,MAAQD,EAAQwC,QAE9BvB,EAAAA,EAAAA,MAACU,EAAM,CACLP,KAAK,SACLnB,KAAK,SACL4D,QAAS,kBAAM9C,GAAS+C,EAAAA,EAAAA,IAAe9D,EAAQ+D,IAAI,EAAC7C,SAAA,EAEpDC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,IAAE,cARRhE,EAAQ+D,GAYZ,KAIf,EC3Be,SAASE,IACtB,IAAMlD,GAAWC,EAAAA,EAAAA,MAMjB,OAJAkD,EAAAA,EAAAA,YAAU,WACRnD,GAASoD,EAAAA,EAAAA,MACX,GAAG,CAACpD,KAGFE,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA3B,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPC,EAAAA,EAAAA,KAACa,EAAW,KACZb,EAAAA,EAAAA,KAACwC,EAAW,MAGlB,C","sources":["pages/redux/contacts/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from \"styled-components\";\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    \n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  font: inherit;\n  background-color: transparent ;\n  border: 1px solid black;\n  width: 250px;\n  margin-top: 4px;\n  font-size: 12px;\n  padding: 6px 12px 6px 12px;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"pages/redux/contacts/filterSlice\";\nimport { selectFilter } from \"pages/redux/contacts/selectors\";\nimport { Box, Input, Label } from \"./Filter.styled\";\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter); \n  const dispatch = useDispatch(); \n\n  // Обробник зміни значення фільтра\n  const onChange = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue)); \n  };\n\n  return (\n    <Box>\n      <Label>Find contacts by name</Label>\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Box>\n  );\n};","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 20px;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    \n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  font: inherit;\n  background-color: transparent ;\n  border: 1px solid black;\n  width: 250px;\n  margin-top: 4px;\n  font-size: 12px;\n  padding: 6px 12px 6px 12px;\n`;\n\nexport const Button = styled.button`\n    border: 1px solid #0063cc;\n    background-color: #0063cc;\n\n    color: white;\n    text-align: center;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: normal;\n\n    display: flex;\n    align-items: center;\n\n    border-radius: 5px;\n\n    padding: 8px 25px;\n\n    font-family: system-ui;\n    text-transform: uppercase;\n\n    margin: 20px auto 0 auto;\n    gap: 5px;\n`;\n","import { Filter } from 'components/Filter/Filter';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'pages/redux/contacts/operations';\nimport { selectContacts } from 'pages/redux/contacts/selectors';\n\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport { Button, Form, Input, Label } from './ContactsForm.styled';\n\n\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`${name} вже в контактах☝️`);\n\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameInputId}>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter a name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            required\n          />\n        </Label>\n\n        <Label htmlFor={numberInputId}>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Введіть номер телефону\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"^\\+?[0-9\\s\\-\\(\\)]{7,20}$\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">\n          Add contact  \n          <PersonAddIcon/>\n        </Button>\n      </Form>\n      <Filter />\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    width: 450px;\n    justify-content: space-between;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 15px;\n`;\n\nexport const Button = styled.button`\n    border: 1px solid #0063cc;\n    /* background-color: #0063cc; */\n\n    /* color: white; */\n    color: #0063cc;\n    text-align: center;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: normal;\n\n    display: flex;\n    align-items: center;\n\n    border-radius: 5px;\n\n    padding: 4px 25px;\n\n    font-family: system-ui;\n    text-transform: uppercase;\n`;","\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from 'pages/redux/contacts/operations';\nimport { selectVisibleContacts } from 'pages/redux/contacts/selectors';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Button, Item } from './ContactsList.styled';\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          {\n            <Button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              <DeleteIcon/>\n              delete\n            </Button>\n          }\n        </Item>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from \"components/ContactsForm/ContactsForm\";\nimport { ContactList } from \"components/ContactsList/ContactsList\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"pages/redux/contacts/operations\";\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts()); \n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Box","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Filter","value","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","type","onChange","event","normalizedValue","target","changeFilter","Form","Button","_templateObject4","nameInputId","nanoid","numberInputId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","_event$currentTarget","currentTarget","_Fragment","onSubmit","preventDefault","some","alert","concat","addContacts","htmlFor","placeholder","pattern","title","required","PersonAddIcon","Item","ContactList","map","onClick","deleteContacts","id","DeleteIcon","Contacts","useEffect","fetchContacts"],"sourceRoot":""}