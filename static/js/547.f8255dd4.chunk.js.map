{"version":3,"file":"static/js/547.f8255dd4.chunk.js","mappings":"+NAOaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAM,EAC/CC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EAErCC,GAAwBC,EAAAA,EAAAA,IACnC,CAACP,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAG,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cAAc,GAE7D,I,SCZWE,EAAS,WACpB,IAAMC,GAAQC,EAAAA,EAAAA,IAAYV,GACpBW,GAAWC,EAAAA,EAAAA,MASjB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,2BACPC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOP,MAAOA,EAAOQ,SATpB,SAAAC,GACf,IAAMC,EAAkBD,EAAME,OAAOX,MAAMH,cAE3CK,GAASU,EAAAA,EAAAA,IAAaF,GACxB,MAQF,ECrBaG,EACX,mECmBSC,EAAS,WAGlB,IAHiC,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACtBG,EAAK,GACLC,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWR,IAC3CA,KACLI,GAAMK,EAAgC,GAAdJ,EAAML,IAEhC,OAAOI,CACT,E,oBCnBMM,EAAcX,IACdY,EAAgBZ,IAETa,EAAc,WACzB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BhC,EAAIkC,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClB7C,GAAWY,EAAAA,EAAAA,IAAYd,GACvBe,GAAWC,EAAAA,EAAAA,MAqBXkC,EAAe,SAAA5B,GACnB,IAAA6B,EAAwB7B,EAAM8B,cAAtB3C,EAAI0C,EAAJ1C,KAAMI,EAAKsC,EAALtC,MACd,OAAQJ,GACN,IAAK,OACHoC,EAAQhC,GACR,MACF,IAAK,SACHoC,EAAUpC,GACV,MACF,QACE,OAEN,EAEA,OACEI,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAAnC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAMqC,SAnCW,SAAAhC,GACnBA,EAAMiC,iBAEerD,EAASsD,MAC5B,SAAAhD,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBD,EAAKC,aAAa,IAI5D+C,MAAM,GAADC,OAAIjD,EAAI,mGAKfM,GAAS4C,EAAAA,EAAAA,IAAY,CAAElD,KAAAA,EAAMuC,OAAAA,KAE7BH,EAAQ,IACRI,EAAU,IACZ,EAkBiC/B,SAAA,EAC3BD,EAAAA,EAAAA,MAAA,SAAO2C,QAAStB,EAAYpB,SAAA,CAAC,QAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLX,KAAK,OACLoD,YAAY,iEACZhD,MAAOJ,EACPY,SAAU6B,EACVY,QAAQ,YACRC,MAAM,8SACNC,UAAQ,QAIZ/C,EAAAA,EAAAA,MAAA,SAAO2C,QAASrB,EAAcrB,SAAA,CAAC,UAE7BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,MACLX,KAAK,SACLoD,YAAY,6HACZhD,MAAOmC,EACP3B,SAAU6B,EACVY,QAAQ,aACRG,UAAU,KACVC,UAAU,KACVH,MAAM,8OACNC,UAAQ,QAIZ/C,EAAAA,EAAAA,MAAA,UAAQG,KAAK,SAAQF,SAAA,CAAC,cACR,WAGhBC,EAAAA,EAAAA,KAACP,EAAM,MAGb,EClFauD,EAAc,WACzB,IAAMjE,GAAWY,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MAEjB,OACEG,EAAAA,EAAAA,KAAA,MAAAD,SACGhB,EAASkE,KAAI,SAAA5D,GAAO,OACnBS,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CACGV,EAAQC,KAAO,MAAQD,EAAQwC,QAE9B7B,EAAAA,EAAAA,KAAA,UACEC,KAAK,SACLX,KAAK,SACL4D,QAAS,kBAAMtD,GAASuD,EAAAA,EAAAA,IAAe9D,EAAQwB,IAAI,EAACd,SACrD,aAPIV,EAAQwB,GAYZ,KAIb,ECxBe,SAASuC,IACtB,IAAMxD,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwD,EAAAA,EAAAA,YAAU,WACRzD,GAAS0D,EAAAA,EAAAA,MACX,GAAG,CAAC1D,KAGFE,EAAAA,EAAAA,MAAAoC,EAAAA,SAAA,CAAAnC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPC,EAAAA,EAAAA,KAACqB,EAAW,KACZrB,EAAAA,EAAAA,KAACgD,EAAW,MAGlB,C","sources":["pages/redux/contacts/selectors.js","components/Filter/Filter.jsx","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"pages/redux/contacts/filterSlice\";\nimport { selectFilter } from \"pages/redux/contacts/selectors\";\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter); \n  const dispatch = useDispatch(); \n\n  // Обробник зміни значення фільтра\n  const onChange = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue)); \n  };\n\n  return (\n    <div>\n      <label>Find contacts by name</label>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </div>\n  );\n};","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","import { Filter } from 'components/Filter/Filter';\nimport { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'pages/redux/contacts/operations';\nimport { selectContacts } from 'pages/redux/contacts/selectors';\n\n\nconst nameInputId = nanoid();\nconst numberInputId = nanoid();\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`${name} вже в контактах☝️`);\n\n      return;\n    }\n\n    dispatch(addContacts({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Введіть ім'я\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[^\\d]+$\"\n            title=\"Ім'я має містити лише літери, апострофи, дефіси та відступи\"\n            required\n          />\n        </label>\n\n        <label htmlFor={numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Введіть номер телефону\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+\\d{12}\"\n            minlength=\"13\"\n            maxlength=\"13\"\n            title=\"Номер телефону має починатися з +, а потім 12 цифр\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">\n          Add contact{' '}\n        </button>\n      </form>\n      <Filter />\n    </>\n  );\n};\n","\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContacts } from 'pages/redux/contacts/operations';\nimport { selectVisibleContacts } from 'pages/redux/contacts/selectors';\n\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          {\n            <button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => dispatch(deleteContacts(contact.id))}\n            >\n              \n              delete\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { ContactForm } from \"components/ContactsForm/ContactsForm\";\nimport { ContactList } from \"components/ContactsList/ContactsList\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"pages/redux/contacts/operations\";\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts()); \n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Filter","value","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","type","onChange","event","normalizedValue","target","changeFilter","urlAlphabet","nanoid","size","arguments","length","undefined","id","bytes","crypto","getRandomValues","Uint8Array","scopedUrlAlphabet","nameInputId","numberInputId","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","handleChange","_event$currentTarget","currentTarget","_Fragment","onSubmit","preventDefault","some","alert","concat","addContacts","htmlFor","placeholder","pattern","title","required","minlength","maxlength","ContactList","map","onClick","deleteContacts","Contacts","useEffect","fetchContacts"],"sourceRoot":""}